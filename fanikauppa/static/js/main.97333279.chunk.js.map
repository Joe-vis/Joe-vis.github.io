{"version":3,"sources":["components/storefront.js","components/ScartContent.js","components/FinalForm.js","App.js","reportWebVitals.js","index.js"],"names":["FrontInfo","items","id","scart","setScart","useState","num","setNewNum","submit","ev","preventDefault","info","className","alt","nimi","src","img","hinta","desc","onSubmit","type","min","max","value","onChange","e","target","onClick","FrontItems","tuotteet","front","map","CartInfo","index","console","log","temp","splice","CartContent","Scart","course","FinalForm","ostajaData","setOstajaData","finalForm","Buy","tempObj","i","length","elements","getAttribute","name","required","App","ShowCart","setShowCart","ShowForm","setShowForm","Bought","shoppingCart","width","height","fill","viewBox","d","reduce","a","b","style","display","textAlign","margin","ppaikka","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.97333279.chunk.js","sourcesContent":["import { useState } from 'react';\r\n\r\n\r\nconst FrontInfo = ({ items,id, scart, setScart }) => {\r\n    const [num, setNewNum] = useState(1);\r\n    const submit = (ev) => {\r\n        if(num>100){setNewNum(1)};\r\n        ev.preventDefault()\r\n        setScart([...scart, {id: id, num: num, info: items}])\r\n        setNewNum(1);\r\n    }\r\n    return (\r\n    <div className=\"item\">\r\n        <div className=\"imgWrapper\">\r\n        <img className=\"image\" alt={items.nimi} src={items.img}></img>\r\n        </div>\r\n        <h2>{items.nimi}</h2>\r\n        <h2>{items.hinta}€</h2>\r\n        <details>\r\n        <summary>Lisätietoja</summary>\r\n        <p>{items.desc}</p>\r\n        </details>\r\n        <div className=\"ostoNapit\" >\r\n        <form onSubmit={submit}>\r\n        <input type=\"number\" min=\"1\" max=\"100\" value={num} onChange={e=>setNewNum(e.target.value)}></input>\r\n        </form>\r\n        <button onClick={submit}>Osta</button>\r\n        </div>\r\n    </div>\r\n\r\n    )\r\n}\r\n\r\n\r\nconst FrontItems = ({tuotteet, scart, setScart}) => {\r\n    let front = tuotteet.map((info, id) =>\r\n    <FrontInfo key={id} id={id} items={info} scart={scart} setScart={setScart} />\r\n    )\r\n    return(\r\n        <div className=\"storeItem\">\r\n            {front}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport { FrontItems};","const CartInfo = ({items,index,setScart,scart}) => {\r\n    console.log(setScart)\r\n    const del = () => {\r\n        let temp = [...scart]\r\n        temp.splice(index, 1)\r\n        setScart(temp)\r\n    }\r\n    return (\r\n    <div className=\"cartitem\">\r\n        <div className=\"smolImgWrapper\">\r\n        <img className=\"smolImage\" alt={items.info.nimi} src={items.info.img}></img>\r\n        </div>\r\n        <div className=\"remove\" onClick={del}>X</div>\r\n        <h2>id: {items.id}</h2>\r\n        <h2>{items.info.nimi}</h2>\r\n        <h2>Määrä: {items.num}</h2>\r\n        <h2>Hinta: {items.info.hinta * items.num}€</h2>\r\n    </div>\r\n\r\n    )\r\n}\r\n\r\n\r\nconst CartContent = ({Scart, setScart}) => {\r\n    let course = Scart.map((info, id) =>\r\n    <CartInfo key={id} index={id} items={info} setScart={setScart} scart={Scart}/>\r\n    )\r\n    return(\r\n        <div className=\"cartitems\">\r\n        {course}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport { CartContent };\r\n","const FinalForm =({ostajaData, setOstajaData, finalForm ,scart, Buy,setScart})=>{\r\n    const oowoo = (ev) =>{\r\n        ev.preventDefault()\r\n        let tempObj = {}\r\n        for(let i = 0; i < ev.target.length - 1; i++){\r\n            tempObj[ev.target.elements[i].getAttribute(\"name\")] = ev.target.elements[i].value\r\n        }\r\n        Buy([...scart])\r\n        setOstajaData(tempObj)\r\n        finalForm()\r\n        setScart([])\r\n        console.log(ostajaData)\r\n    }\r\n    return(\r\n        <form onSubmit={oowoo}>\r\n            <label>Nimi</label><br/>\r\n            <input type=\"text\" name=\"name\" required /><br/>\r\n            <label>sähköpostiosoite</label><br/>\r\n            <input type=\"email\" name=\"email\" required/><br/>\r\n            <label>puhelinnumero </label><br/>\r\n            <input type=\"text\" name=\"puh\" required/><br/>\r\n            <hr></hr>\r\n            <label>katuosoite</label><br/>\r\n            <input type=\"text\" name=\"osoite\" required/><br/>\r\n            <label>postinumero</label><br/>\r\n            <input type=\"text\" name=\"pnum\" required/><br/>\r\n            <label>postitoimipaikka</label><br/>\r\n            <input type=\"text\" name=\"ppaikka\" required/><br/>\r\n            <input type=\"submit\" value=\"Vahvista tilaus\" required/>\r\n        </form>\r\n    )\r\n}\r\nexport default FinalForm;\r\n","import './App.css';\r\nimport { FrontItems } from './components/storefront.js';\r\nimport { CartContent } from './components/ScartContent';\r\nimport FinalForm from './components/FinalForm'\r\nimport { useState } from 'react';\r\n\r\n\r\n\r\nconst img = \"https://media.discordapp.net/attachments/821291299479093248/877523074151497768/89d4044b5d00541fe8d1e1ac295b648068-17-blob-arms.png\"\r\nconst img2 = \"https://media.discordapp.net/attachments/322482500742152203/890639995940003880/unknown.png\"\r\nconst img3 = \"https://m.media-amazon.com/images/I/71fS2SBKk4L._AC_SL1500_.jpg\"\r\n\r\nlet tuotteet = [{nimi: \"a\", img: img, hinta:10, desc: \"abcd\"},{nimi: \"Muki\", img: img3, hinta:100},{nimi: \"lippis\", img: img2, hinta:10}]\r\n\r\nconst App = () => {\r\n  const [ShowCart, setShowCart] = useState(false);\r\n  const [ShowForm, setShowForm] = useState(false);\r\n  const [scart, setScart] = useState([]);\r\n  const [Bought, Buy] = useState([]);\r\n\r\n  const [ostajaData, setOstajaData] =  useState({});\r\n  const shoppingCart = () => setShowCart(!ShowCart);\r\n  const finalForm = () => {setShowForm(!ShowForm);setShowCart(false) };\r\n  const ClearScart = () => setScart([])\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        Fanikauppa\r\n        <svg width=\"56\" height=\"56\" fill=\"currentColor\" className=\"cart-plus\" viewBox=\"0 0 16 16\" onClick={shoppingCart}>\r\n          <path d=\"M9 5.5a.5.5 0 0 0-1 0V7H6.5a.5.5 0 0 0 0 1H8v1.5a.5.5 0 0 0 1 0V8h1.5a.5.5 0 0 0 0-1H9V5.5z\"/>\r\n          <path d=\"M.5 1a.5.5 0 0 0 0 1h1.11l.401 1.607 1.498 7.985A.5.5 0 0 0 4 12h1a2 2 0 1 0 0 4 2 2 0 0 0 0-4h7a2 2 0 1 0 0 4 2 2 0 0 0 0-4h1a.5.5 0 0 0 .491-.408l1.5-8A.5.5 0 0 0 14.5 3H2.89l-.405-1.621A.5.5 0 0 0 2 1H.5zm3.915 10L3.102 4h10.796l-1.313 7h-8.17zM6 14a1 1 0 1 1-2 0 1 1 0 0 1 2 0zm7 0a1 1 0 1 1-2 0 1 1 0 0 1 2 0z\"/>\r\n        </svg>\r\n      </header>\r\n\r\n\r\n        <div className=\"main\">\r\n        \r\n        <FrontItems tuotteet={tuotteet} scart={scart} setScart={setScart} />\r\n            \r\n        </div>\r\n        {ShowCart ?\r\n        <div className=\"Ostoskori\">\r\n          <div className=\"close\"  onClick={shoppingCart}>X</div>\r\n          <CartContent Scart = {scart} setScart={setScart}/>\r\n          <button className=\"ostoNappi\" onClick={finalForm}>Osta</button>\r\n          <button className=\"ostoNappi\" onClick={ClearScart}>Poista</button>\r\n          kokonaishinta: {\r\n            scart.length >0 ?\r\n            scart.map((info) => info.info.hinta * info.num).reduce((a, b) => a + b)\r\n            : 0\r\n          }€\r\n        </div>\r\n        : null}\r\n        {ShowForm ?\r\n        <div className=\"form\">\r\n        <div className=\"close\"  onClick={finalForm}>X</div>\r\n          <FinalForm ostajaData={ostajaData} setOstajaData={setOstajaData} finalForm={finalForm} scart={scart} Buy={Buy} setScart={setScart}/>\r\n        </div>\r\n        : ostajaData.name ? \r\n        <div style={{display: \"inline\", textAlign: \"start\", width: \"fit-content\", margin: \"auto\"}}>\r\n          Kiitos {ostajaData.name} ostoksestasi :D<br/>\r\n          Tilaus: {Bought.map((info)=>info.num +\" x \"+ info.info.nimi + \", \")}<br/>\r\n          Hinta: {\r\n            Bought.length >0 ?\r\n            Bought.map((info) => info.info.hinta * info.num).reduce((a, b) => a + b)\r\n            : 0\r\n          }€ <br />\r\n          Toimitusosoite: {ostajaData.ppaikka}<br/>\r\n        </div>\r\n        : null}\r\n    </div>\r\n  );\r\n}\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}